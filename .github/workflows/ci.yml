name: CI

on:
  push:
    branches: [master, dev]

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
        compiler: [g++, clang++]

    steps:
    - uses: actions/checkout@v3
  
    - uses: LazyPanda07/extract-current-branch@master
  
    - name: Build
      run: mkdir build && cd build && cmake -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} .. && make && make install
      
    - name: Tests
      run: cd tests && python3 test.py --application_folder_path ${{ github.workspace }}/build/make_install --shell_script_name linux_default_build.sh

    - name: Upload artifacts
      if: ${{ env.CURRENT_BRANCH == 'master' && matrix.compiler == 'g++' }}
      uses: actions/upload-artifact@v3
      with:
        name: linux
        path: ${{ github.workspace }}/build/make_install


  windows:
    runs-on: windows-latest

    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - uses: actions/checkout@v3
  
    - uses: LazyPanda07/extract-current-branch@master
  
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@main
  
    - name: Build
      run: mkdir build && cd build && cmake .. && msbuild /p:Configuration=${{ matrix.configuration }} /p:Platform=x64 INSTALL.vcxproj
      
    - name: Activate developer CLI
      uses: ilammy/msvc-dev-cmd@v1

    - name: Tests
      run: cd tests && python test.py --application_folder_path ${{ github.workspace }}/build/make_install --shell_script_name windows_default_build.bat

    - name: Remove intermediates
      run: |
          cd build && cd make_install
          rm *.exp
          rm *.lib
          rm *.obj

    - name: Remove debug
      if: ${{ env.CURRENT_BRANCH == 'master' && matrix.configuration == 'Debug' }}
      run: |
          cd build && cd make_install
          rm *.exe
          rm *.jpg
          rm *.bat

    - name: Upload artifacts
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: actions/upload-artifact@v3
      with:
        name: Windows_${{ matrix.configuration }}
        path: ${{ github.workspace }}\build\make_install

  linux-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
        compiler: [g++, clang++]

    steps:
    - uses: LazyPanda07/extract-current-branch@master

    - name: Docker
      uses: addnab/docker-run-action@v3
      with:
        image: ubuntu:18.04
        run: |
            apt update
            apt install gcc g++ clang cmake git python3 -y
            git clone https://github.com/LazyPanda07/ResourceBuilder.git -b ${{ env.CURRENT_BRANCH }}
            cd ResourceBuilder
            export REPOSITORY=$(pwd)
            mkdir build && cd build && cmake -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} .. && make && make install
            cd ${REPOSITORY}
            cd tests && python3 test.py --application_folder_path ${REPOSITORY}/build/make_install --shell_script_name linux_default_build.sh

  publish:
    runs-on: windows-latest
    needs: [linux, windows, linux-docker]
    strategy:
      matrix:
        artifact: [Windows_Debug, Windows_Release, linux]

    steps:
    - uses: actions/checkout@v3

    - uses: LazyPanda07/extract-current-branch@master
  
    - name: Setup release version variable
      run: echo "RESOURCE_BUILDER_VERSION=$($($($(Select-String -Path .\resource_builder_core\src\utils.cpp -Pattern "resourceBuilderVersion = ") -split '( = )')[2].TrimEnd(';')).Trim('\"'))" >> $Env:GITHUB_ENV
      
    - name: Setup archive name variable
      run: echo "RESOURCE_BUILDER_ARCHIVE_NAME=${{ matrix.artifact }}_ResourceBuilder_${{ env.RESOURCE_BUILDER_VERSION }}.zip" >> $Env:GITHUB_ENV

    - name: Download artifact
      # if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.artifact }}

    - name: Folder
      run: dir
      
    - name: Create zip
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      run: Compress-Archive -Path @("${{ matrix.artifact }}") -DestinationPath ${{ env.RESOURCE_BUILDER_ARCHIVE_NAME }}
      
    - name: Publish
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: svenstaro/upload-release-action@master
      with:
        tag: v${{ env.RESOURCE_BUILDER_VERSION }}
        file: ${{ env.RESOURCE_BUILDER_ARCHIVE_NAME }}
          